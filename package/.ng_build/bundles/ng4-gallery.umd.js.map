{"version":3,"file":"ng4-gallery.umd.js","sources":["../ts/src/app/modules/gallery/gallery.module.ts","../ts/src/app/components/slideshow/slideshow.component.ts","../ts/src/app/components/gallery/gallery.component.ts","../ts/src/app/components/gallery-item/gallery-item.component.ts","../ts/src/app/services/notification/notification.service.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule                  } from '@angular/common';\n\nimport { SlideShowComponent   } from '../../components/slideshow/slideshow.component';\nimport { GalleryComponent     } from '../../components/gallery/gallery.component';\nimport { GalleryItemComponent } from '../../components/gallery-item/gallery-item.component';\n\n// Singleton Services\n\nimport { NotificationService  } from '../../services/notification/notification.service';\n\n// Video (videogular2) modules\n\nimport { VgCoreModule        } from 'videogular2/core';\nimport { VgControlsModule    } from 'videogular2/controls';\nimport { VgOverlayPlayModule } from 'videogular2/overlay-play';\nimport { VgBufferingModule   } from 'videogular2/buffering';\nexport class GalleryModule\n{\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders\n    {\n        return {\n            ngModule: GalleryModule,\n            providers: [\n                NotificationService\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n\n        // Video / videogular2 modules\n        VgCoreModule,\n        VgControlsModule,\n        VgOverlayPlayModule,\n        VgBufferingModule,\n    ],\n    declarations: [\n        SlideShowComponent,\n        GalleryComponent,\n        GalleryItemComponent,\n    ],\n    exports: [\n        SlideShowComponent,\n        GalleryComponent,\n        GalleryItemComponent,\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GalleryModule_tsickle_Closure_declarations() {\n/** @type {?} */\nGalleryModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGalleryModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ViewChild, ElementRef, Input } from '@angular/core';\n\n// Import PhotoSwipe\n\nimport PhotoSwipe from 'photoswipe';\nimport PhotoSwipeUI_Default from 'photoswipe/dist/photoswipe-ui-default';\n\n// Image Interface\n\nimport { IImage } from '../../interfaces/image';\nexport class SlideShowComponent\n{\n     photoSwipe: ElementRef;\n\n     images: IImage[] = [];\nconstructor() { }\n/**\n * @param {?=} images\n * @return {?}\n */\nopenSlideshow(images?: IImage[])\n    {\n        // Build slideshow images array\n        images = images || this.images;\n\n        // define options (if needed)\n        const /** @type {?} */ options = {\n            // optionName: 'option value'\n            // for example:\n            index: 0 // start at first slide\n        };\n\n        // Initializes and opens PhotoSwipe\n        const /** @type {?} */ slideShow = new PhotoSwipe(this.photoSwipe.nativeElement, PhotoSwipeUI_Default, images, options);\n        slideShow.init();\n    }\n    // ========================================================================\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector   : 'app-slideshow',\n    template: `\n      <!-- Root element of PhotoSwipe. Must have class pswp. -->\n      <div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" #slideShow>\n\n          <!-- Background of PhotoSwipe. \n                      It's a separate element as animating opacity is faster than rgba(). -->\n          <div class=\"pswp__bg\"></div>\n\n          <!-- Slides wrapper with overflow:hidden. -->\n          <div class=\"pswp__scroll-wrap\">\n\n              <!-- Container that holds slides. \n                      PhotoSwipe keeps only 3 of them in the DOM to save memory.\n                      Don't modify these 3 pswp__item elements, data is added later on. -->\n              <div class=\"pswp__container\">\n                  <div class=\"pswp__item\"></div>\n                  <div class=\"pswp__item\"></div>\n                  <div class=\"pswp__item\"></div>\n              </div>\n\n              <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n              <div class=\"pswp__ui pswp__ui--hidden\">\n\n                  <div class=\"pswp__top-bar\">\n\n                      <!--  Controls are self-explanatory. Order can be changed. -->\n\n                      <div class=\"pswp__counter\"></div>\n\n                      <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n                      <button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n                      <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n                      <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n                      <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n                      <!-- element will get class pswp__preloader--active when preloader is running -->\n                      <div class=\"pswp__preloader\">\n                          <div class=\"pswp__preloader__icn\">\n                              <div class=\"pswp__preloader__cut\">\n                                  <div class=\"pswp__preloader__donut\"></div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n\n                  <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n                      <div class=\"pswp__share-tooltip\"></div>\n                  </div>\n\n                  <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\"></button>\n                  <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\"></button>\n\n                  <div class=\"pswp__caption\">\n                      <div class=\"pswp__caption__center\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    `,\n    styles: [`\n      .pswp__bg\n      {\n          background: rgba(0, 0, 0, 0.9);\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'photoSwipe': [{ type: ViewChild, args: ['slideShow', ] },],\n'images': [{ type: Input },],\n};\n}\n\nfunction SlideShowComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSlideShowComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlideShowComponent.ctorParameters;\n/** @type {?} */\nSlideShowComponent.propDecorators;\n/** @type {?} */\nSlideShowComponent.prototype.photoSwipe;\n/** @type {?} */\nSlideShowComponent.prototype.images;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\n// Gallery interface\n\nimport { IGalleryItem        } from '../../interfaces/gallery-item';\n\n// (Singleton) Notification service used to alert other components of changes & act upon it\n\nimport { NotificationService } from '../../services/notification/notification.service';\nexport class GalleryComponent implements OnInit\n{\n    // Set \"isLoadingGallerys\" to True if we're already loading videos (to avoid\n    // sending multiple requests in case user keeps scrolling)\n    isLoadingGallery = false;\n    error            = '';\n     galleryItems  : IGalleryItem[] = [];\n\n    // True => user is loading index page   |   False => user is viewing gallery item details page\n     isSideBar     = false;\n\n     galleryDescr  = '';\n\n    // Only valid if video is loading as a side bar, store the main video's ID\n    // Variable used to skip loading the same video both as main one and on the side bar!\n     mainGalleryId = '';\n\n    // Disable items auto-loading after 5 times\n     disableLoadMoreAfter = 5;\nprivate autoLoadCounter       = 0;\n\n     scrollMoreDiv: ElementRef;\n/**\n * @param {?} notif\n */\nconstructor(private notif: NotificationService)\n    { }\n/**\n * @return {?}\n */\nngOnInit()\n    {\n        // Infinite scrolling implemented in home page only\n        // (doesn't make sense to add it in sidebar...)\n        if (!this.isSideBar)\n        {\n            // AFAIA, we can't use conditional listening, ie. combine HostListener() & if(isSideBar),\n            // so we have to use the \"classic\" approach, ie. call addEventListener()\n\n            const /** @type {?} */ that = this;\n            document.addEventListener('scroll', () =>\n            {\n                that.userScrolling();\n            }, true);\n        }\n    }\n/**\n * @return {?}\n */\nuserScrolling()\n    {\n        // User is scrolling page, load more items if s/he reached bottom:\n        if (this.isInViewport(this.scrollMoreDiv.nativeElement))\n        {\n            // load more items\n            this.loadMoreItems();\n        }\n    }\n/**\n * @return {?}\n */\nloadMoreItems()\n    {\n        if (this.autoLoadCounter <= this.disableLoadMoreAfter)\n        {\n            console.log('loadMoreItems()');\n\n            this.autoLoadCounter++;\n            this.notif.loadMoreItems();\n        }\n    }\n/**\n * @param {?} el\n * @return {?}\n */\nisInViewport(el)\n    {\n        // (Helper function) Return true if element is in viesport (ie. visible!)\n\n        const /** @type {?} */ rect = el.getBoundingClientRect();\n\n        return (\n            rect.bottom >= 0 &&\n            rect.right  >= 0 &&\n            rect.top    <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.left   <= (window.innerWidth  || document.documentElement.clientWidth)\n        );\n    }\n    // =========================================================================\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector   : 'app-gallery',\n    template: `\n      <!-- Welcome Message -->\n      <header *ngIf=\"!isSideBar\">\n          <p>{{galleryDescr}}</p>\n      </header>\n\n      <section>\n          <!-- for loop to display (up to 10) gallery items -->\n          <app-gallery-item\n              *ngFor=\"let item of galleryItems\"\n                  [item]=\"item\"\n                  [isSideBar]=\"isSideBar\">\n          </app-gallery-item>\n\n          <!-- <hr /> -->\n          <div class=\"row text-center\" id=\"loading\" *ngIf=\"!isSideBar\">\n              <!-- <img src=\"assets/images/loading.gif\" title=\"Loading more awesome entries...\" /> &nbsp;&nbsp; -->\n\n              <button (click)=\"loadMoreItems()\" class=\"btn blue center\">\n                  Loading more awesome entries...\n              </button>\n          </div>\n\n          <div #scrollMore *ngIf=\"!isSideBar\">&nbsp;</div>\n      </section>\n\n      <br /><br />\n    `,\n    styles: [`\n      /* ========== Grid \"Container\" */\n      section\n      {\n          overflow-x: hidden;\n      }\n\n      /* ========== Fix a small position anomaly with large width */\n      @media screen and (min-width: 1000px)\n      {\n          section { padding-left: 10px; }\n      }\n\n      /* ========== Button */\n      .btn\n      {\n          border-radius: 0;    \n      }\n      .btn.blue\n      {\n          background: #207bca;\n          -webkit-box-shadow: 0 0 8px 1px hsla(208, 100%, 93%, 1);\n                  box-shadow: 0 0 8px 1px hsla(208, 100%, 93%, 1);\n          /* border: 1px solid hsla(208, 100%, 94%, 1); */\n          color: aliceblue;\n      }\n\n      /* ========== \"Loading more items...\" */\n      #loading\n      {\n          font-weight: bold;\n          margin-top: 15px;\n      }\n      #loading button\n      {\n          margin: 0 auto;\n          cursor: pointer;\n      }\n\n      /* ========== Indent Welcome/Greeting Header */\n      header\n      {\n          text-indent: 7px;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'galleryItems': [{ type: Input },],\n'isSideBar': [{ type: Input },],\n'galleryDescr': [{ type: Input },],\n'mainGalleryId': [{ type: Input },],\n'disableLoadMoreAfter': [{ type: Input },],\n'scrollMoreDiv': [{ type: ViewChild, args: ['scrollMore', ] },],\n};\n}\n\nfunction GalleryComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGalleryComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGalleryComponent.ctorParameters;\n/** @type {?} */\nGalleryComponent.propDecorators;\n/** @type {?} */\nGalleryComponent.prototype.isLoadingGallery;\n/** @type {?} */\nGalleryComponent.prototype.error;\n/** @type {?} */\nGalleryComponent.prototype.galleryItems;\n/** @type {?} */\nGalleryComponent.prototype.isSideBar;\n/** @type {?} */\nGalleryComponent.prototype.galleryDescr;\n/** @type {?} */\nGalleryComponent.prototype.mainGalleryId;\n/** @type {?} */\nGalleryComponent.prototype.disableLoadMoreAfter;\n/** @type {?} */\nGalleryComponent.prototype.autoLoadCounter;\n/** @type {?} */\nGalleryComponent.prototype.scrollMoreDiv;\n/** @type {?} */\nGalleryComponent.prototype.notif;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router                   } from '@angular/router';\n\n// Import gallery item Interface\n\nimport { IGalleryItem        } from '../../interfaces/gallery-item';\n\n// (Singleton) Notification service used to alert other components of changes & act upon it\n\nimport { NotificationService } from '../../services/notification/notification.service';\nexport class GalleryItemComponent implements OnInit\n{\n    // If isSideBar = true, re-arrange UI to show 1 item per column\n     isSideBar = false;\n\n     item: IGalleryItem = {\n        id         : '',\n        description: '',\n        name       : '',\n        ratings    : [],\n        url        : '',\n        tags       : [],\n        type       : 'image',\n        showHeart  : true,\n    };\n\n    isLoading = false;\n    error     : string;\n/**\n * @param {?} notif\n */\nconstructor(private notif: NotificationService)\n    { }\n/**\n * @return {?}\n */\nngOnInit()\n    {\n        // Define default dropdown menu items\n        if (!this.item.menu)\n        {\n            this.item.menu = [\n                { name: 'Github Repo', url: '#', isSeparator: false },\n                { name: 'Website',     url: '#', isSeparator: false },\n                { name: '',            url: '#', isSeparator: true  },\n                { name: 'More...',     url: '#', isSeparator: false },\n            ];\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nopenGallery(e)\n    {\n        console.log('openGallery()');\n\n        e.preventDefault();\n        this.notif.openSlideShow(this.item.id);\n    }\n/**\n * @param {?} e\n * @return {?}\n */\ntoggleFavorite(e)\n    {\n        e.preventDefault();\n        this.notif.toggleFavorite(this.item.id);\n    }\n    // =========================================================================\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector   : 'app-gallery-item',\n    template: `\n      <div class=\"item no-padding no-gutters col-lg-3 col-md-6 col-sm-12 col-xs-12\" [ngClass]=\"{ 'auto-width' : isSideBar }\">\n\n          <!-- Item Name -->\n          <h4 class=\"name float-left\">\n              <a href=\"#\" (click)=\"openGallery($event)\">    <!-- [routerLink]=\"['/items', item?.id]\"> -->\n                  {{item?.name}}\n              </a>\n          </h4>\n\n          <!-- More (...) -->\n          <div id=\"more\" *ngIf=\"item?.menu\">\n              <div class=\"float-right more-dot\">\n                  <a href=\"#\">\n                      <!-- <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\" title=\"More info about {{item?.name}}\"></i> -->\n                      <img src=\"assets/images/if_more-horiz_326673.svg\" aria-hidden=\"true\" title=\"More info about {{item?.name}}\" />\n                  </a>\n              </div>\n\n              <!-- Dropdown Menu -->\n              <div class=\"clearfix\"></div>\n              <div class=\"dropdown\">\n                  <ul>\n                      <li *ngFor=\"let menuItem of item?.menu\" [ngClass]=\"{ 'separator' : menuItem.isSeparator }\">\n                          <a [href]=\"menuItem.url\" *ngIf=\"!menuItem.isSeparator\">{{menuItem.name}}</a>\n                          <hr *ngIf=\"menuItem.isSeparator\" />\n                      </li>\n                  </ul>\n              </div>\n          </div>\n\n          <!-- Items / Image / Video Player / ... -->\n          <span [title]=\"item?.description\" [ngSwitch]=\"item?.type\">\n              <!-- Video Player -->\n              <vg-player *ngSwitchCase=\"'video'\">\n                  <vg-overlay-play></vg-overlay-play>\n                  <vg-buffering></vg-buffering>\n\n                  <vg-scrub-bar *ngIf=\"!isSideBar\">\n                      <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n                      <vg-scrub-bar-buffering-time></vg-scrub-bar-buffering-time>\n                  </vg-scrub-bar>\n\n                  <vg-controls>\n                      <vg-play-pause></vg-play-pause>\n                      <vg-playback-button *ngIf=\"!isSideBar\"></vg-playback-button>\n\n                      <vg-time-display vgProperty=\"current\" vgFormat=\"mm:ss\" *ngIf=\"!isSideBar\"></vg-time-display>\n\n                      <vg-scrub-bar style=\"pointer-events: none;\"></vg-scrub-bar>\n\n                      <vg-time-display vgProperty=\"left\" vgFormat=\"mm:ss\" *ngIf=\"!isSideBar\"></vg-time-display>\n                      <vg-time-display vgProperty=\"total\" vgFormat=\"mm:ss\"></vg-time-display>\n\n                      <!-- <vg-track-selector *ngIf=\"!isSideBar\"></vg-track-selector> -->\n                      <vg-mute></vg-mute>\n                      <vg-volume *ngIf=\"!isSideBar\"></vg-volume>\n\n                      <vg-fullscreen></vg-fullscreen>\n                  </vg-controls>\n\n                  <video crossorigin=\"anonymous\" [vgMedia]=\"media\" #media preload=\"none\" class=\"player\" preload=\"metadata\">\n                      <source [src]=\"item?.url\" type=\"item/mp4\">\n\n                          <!-- <track kind=\"subtitles\" label=\"English\" src=\"http://static.itemgular.com/assets/subs/pale-blue-dot.vtt\" srclang=\"en\" default> -->\n\n                          Sorry, your browser doesn't support embedded items\n                  </video>\n              </vg-player>\n\n              <!-- Image -->\n              <img class=\"player\" [src]=\"item?.thumbUrl\" [title]=\"item?.description\" *ngSwitchCase=\"'image'\" (click)=\"openGallery($event)\" />\n          </span>\n\n          <!-- Item Ratings -->\n          <!-- <a href=\"#\" *ngIf=\"item?.ratings\" class=\"rating pull-right\" [title]=\"avgRating | number:'1.0-1'\" alt=\"Rate this item\">\n              <img *ngFor=\"let img of [0,1,2,3,4]\" class=\"favorite\" src=\"assets/images/favorite.png\" (click)=\"rateVideo($event)\" [attr.data-id]=\"img + 1\"\n                  [ngClass]=\"{ 'vivid': intRating >= img + 1 }\" />\n          </a> -->\n\n          <a href=\"#\" (click)=\"toggleFavorite($event)\" class=\"fav float-right\" *ngIf=\"item?.showHeart\">\n              <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n          </a>\n\n          <!-- Item Description -->\n          <div class=\"description\">\n              <p>\n                  <span class=\"capitalize\">{{item?.description}}</span>       <!-- | limitDescr -->\n                  <span *ngIf=\"item?.description.length > 200\">\n                      <!-- &nbsp; <a [routerLink]=\"['/items', item?.id]\" class=\"more\" [title]=\"item?.description\">(More)</a> -->\n                  </span>\n              </p>\n          </div>\n\n          <!-- Tags -->\n          <div class=\"tags\" *ngIf=\"item?.tags\">\n              <a href=\"#\" *ngFor=\"let tag of item?.tags\" class=\"tag\">\n                  {{tag}}\n              </a>\n          </div>\n\n      </div>\n    `,\n    styles: [`\n      /* Item \"Box\" */\n      .item\n      {\n          font-family: 'Droid Sans';\n          font-size: 1em;\n          background: white;\n\n          /* Put some space between items */\n          margin: 6px 6px;\n          padding: 10px;\n\n          /* Add a nice/soft shadow & border around item boxes */\n          -webkit-box-shadow: 0px 0px 8px 1px rgba(235,240,245,1);\n                  box-shadow: 0px 0px 8px 1px rgba(235,240,245,1);\n          border: 1px rgba(235,240,245,1) solid;\n\n          /* Grid-like display: */\n          display: inline-block;\n          width: calc(25% - 16px);\n      }\n\n      .item.no-padding\n      {\n          padding: 0;\n      }\n\n      /* bootstrap col*-* didn't work that well, and because of the time constraints, I used @media queries */\n      @media screen and (max-width: 750px) {\n          .item { width: calc(100% - 16px); max-width: 100%; }  /* 99% */\n      }\n      @media screen and (max-width: 1000px) and (min-width: 751px) {\n          .item { width: calc(50% - 16px); max-width: 50%; }  /* 49% */\n      }\n      @media screen and (max-width: 1200px) and (min-width: 1001px) {\n          .item { width: calc(33% - 16px); max-width: 34%; }  /* 32% */\n      }\n\n      @media screen and (max-width: 1000px)\n      {\n          /* Remove padding on small devices */\n          .item { padding: 0; }\n\n          /* Adjust ratings icons position */\n          .item a.rating { right: 5px; }\n      }\n\n      /* Adjust item player/image dimensions */\n      .item .player\n      {\n          width: 100%;\n          height: 300px;\n          cursor: pointer;\n      }\n\n      .name\n      {\n          line-height: 70px;\n          text-indent: 7px;\n      }\n\n      /* More ... */\n      .more-dot\n      {\n          height: 60px;\n      }\n      .more-dot a\n      {\n          display: -webkit-inline-box;\n          display: -ms-inline-flexbox;\n          display: inline-flex;\n          height: 70px;\n      }\n      .more-dot img\n      {\n          padding-right: 10px;\n          opacity: 0.4;\n      }\n      .more-dot img:hover {\n          opacity: 1;\n      }\n\n      /* Rating icon */\n      img.favorite\n      {\n          opacity: 0.5;\n      }\n\n      .item a.rating\n      {\n          top: 20px;\n          position: relative;\n      }\n\n      /* Change favorite image opacity if user hover it */\n      img:hover.favorite, img.vivid\n      {\n          opacity: 1;\n      }\n\n      /* Item Name */\n      h4\n      {\n          height: 60px;\n          line-height: 25px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n      }\n\n          h4 a\n          {\n              text-decoration: none;\n              color: blue;\n              border-bottom: 1px solid rgba(39, 109, 170, 0.5);\n          }\n\n          h4 a:hover\n          {\n              border-bottom: 2px solid;\n          }\n\n      /* Item Description */\n      .description p\n      {\n          height: 100px;\n          overflow: hidden;\n          padding: 10px;\n      }\n\n      /* Set width to auto if we're loading item as a sidebar (if item details) */\n      .auto-width\n      {\n          width: auto;\n      }\n\n      .more\n      {\n          color: blue;\n          text-decoration: underline;\n      }\n\n      /* Item Tag */\n      div.tags\n      {\n          margin: 5px;\n      }\n      a.tag\n      {\n          display: inline-block;\n          padding: 5px;\n          background: #f8f9fa;\n          color: rgba(73, 80, 87, 0.7);\n          margin-right: 7px;\n          border-bottom: 2px solid hsl(0, 0%, 80%);\n          font-size: 0.9em;\n\n          background: aliceblue;\n          border-bottom: 2px solid #007bff;\n          color: #007bff;\n      }\n      a.tag:hover\n      {\n          text-decoration: none;\n          /* color: #495057; */\n\n          background: hsla(208, 100%, 94%, 1);\n          border-bottom: 2px solid #007bff;\n          color: #007bff;\n      }\n\n      /* Dropdown Menu */\n      .dropdown\n      {\n          position: absolute;\n          display: none;\n          margin: 0;\n          width: 50%;\n          padding: 0;\n          right: 0;\n      }\n      .dropdown ul\n      {\n          background: white;\n          -webkit-box-shadow: 0px 0px 12px 1px rgba(235,240,245,0.5);\n                  box-shadow: 0px 0px 12px 1px rgba(235,240,245,0.5);\n          border: 1px rgba(235,240,245,1);\n          width: 100%;\n          list-style: none;\n          padding: 0;\n          font-size: 0.9em;\n\n          /* Top Border (works with) */\n          border-top: 1px solid rgba(0, 0, 0, 0.1);\n      }\n\n      /* Dropdown arrow */\n      .dropdown:before\n      {\n          position: absolute;\n          top: -7px;\n          display: inline-block;\n          border-right: 7px solid transparent;\n          border-bottom: 7px solid rgba(235, 240, 245, 0.5);\n          border-left: 7px solid transparent;\n          border-bottom-color: rgba(0, 0, 0, 0.1);\n          content: '';\n          right: 10px;\n      }\n  \n      .dropdown:after\n      {\n          position: absolute;\n          top: -6px;\n          display: inline-block;\n          border-right: 6px solid transparent;\n          border-bottom: 7px solid #ffffff;\n          border-left: 6px solid transparent;\n          content: '';\n          right: 11px;\n      }\n\n      .more-dot:hover ~ .dropdown, .dropdown:hover\n      {\n          display: block;\n      }\n\n      .dropdown li\n      {\n          cursor: pointer;\n          line-height: 35px;\n          padding-left: 10px;\n      }\n      /* .dropdown li:hover\n      {\n          background: aliceblue;\n      } */\n\n      li.separator\n      {\n          line-height: 1px;\n          height: 1px;\n      }\n      li.separator hr\n      {\n          border-top-color: aliceblue;\n          margin-top: 0;\n      }\n      .dropdown li a\n      {\n          color: black;\n      }\n      .dropdown li:hover a\n      {\n          text-decoration: underline;\n          color: blue;\n      }\n\n      /* Favorite Icon */\n      a.fav.float-right\n      {\n          padding: 9px;\n          font-size: 1.25em;\n          position: absolute;\n          bottom: 0;\n          right: 5px;\n          color: deeppink;\n          color: darkorchid;\n          color: crimson;\n          color: dodgerblue;\n          color: lightsteelblue;\n          color: wheat;\n      }\n\n      /* Capitalize description */\n      .capitalize\n      {\n          text-transform: capitalize;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isSideBar': [{ type: Input },],\n'item': [{ type: Input },],\n};\n}\n\nfunction GalleryItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGalleryItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGalleryItemComponent.ctorParameters;\n/** @type {?} */\nGalleryItemComponent.propDecorators;\n/** @type {?} */\nGalleryItemComponent.prototype.isSideBar;\n/** @type {?} */\nGalleryItemComponent.prototype.item;\n/** @type {?} */\nGalleryItemComponent.prototype.isLoading;\n/** @type {?} */\nGalleryItemComponent.prototype.error;\n/** @type {?} */\nGalleryItemComponent.prototype.notif;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject    } from 'rxjs/Subject';\nexport class NotificationService\n{\nprivate slideshowOpenedSource    = new Subject<string>();\nprivate moreItemsRequestedSource = new Subject();\nprivate favoriteToggledSource    = new Subject<string>();\n\n    // Observable string streams\n    slideShowOpened$    = this.slideshowOpenedSource.asObservable();\n    moreItemsRequested$ = this.moreItemsRequestedSource.asObservable();\n    favoriteChanged$    = this.favoriteToggledSource.asObservable();\n/**\n * @param {?} id\n * @return {?}\n */\nopenSlideShow(id: string)  { this.slideshowOpenedSource.next(id);    }\n/**\n * @return {?}\n */\nloadMoreItems()            { this.moreItemsRequestedSource.next();   }\n/**\n * @param {?} id\n * @return {?}\n */\ntoggleFavorite(id: string) { this.moreItemsRequestedSource.next(id); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.slideshowOpenedSource;\n/** @type {?} */\nNotificationService.prototype.moreItemsRequestedSource;\n/** @type {?} */\nNotificationService.prototype.favoriteToggledSource;\n/** @type {?} */\nNotificationService.prototype.slideShowOpened$;\n/** @type {?} */\nNotificationService.prototype.moreItemsRequested$;\n/** @type {?} */\nNotificationService.prototype.favoriteChanged$;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["VgBufferingModule","VgOverlayPlayModule","VgControlsModule","VgCoreModule","CommonModule","NgModule","Input","ViewChild","Component","Injectable","Subject"],"mappings":"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"}