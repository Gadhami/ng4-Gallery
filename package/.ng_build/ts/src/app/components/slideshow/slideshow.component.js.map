{"version":3,"sources":["slideshow.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,SAAA,EAAuB,KAAA,EAAM,MAAA,eAAA,CAAA;AAEjD,oBAAoB;AAEpB,OADO,UAAA,MAAA,YAAA,CAAA;AAEP,OADO,oBAAA,MAAA,uCAAA,CAAA;AAMP,MAAC;IAKD;QADK,WAAM,GAAa,EAAA,CAAG;IAGtB,CAAA;IADL;;;OAGG;IACH,aAAK,CAAA,MAAA;QAEG,+BAA+B;QAC/B,MAAM,GAAG,MAAA,IAAU,IAAA,CAAK,MAAC,CAAM;QAE/B,6BAA6B;QAC7B,MAAM,gBAAgB,CAAhB,OAAA,GAAU;YACZ,6BAA6B;YAC7B,eAAe;YACf,KAAK,EAAE,CAAA,CAAE,uBAAA;SACZ,CAAC;QAEF,mCAAmC;QACnC,MAAM,gBAAgB,CAAhB,SAAA,GAAY,IAAI,UAAA,CAAW,IAAC,CAAI,UAAC,CAAU,aAAC,EAAc,oBAAA,EAAsB,MAAA,EAAQ,OAAA,CAAQ,CAAC;QACvG,SAAS,CAAC,IAAC,EAAI,CAAE;IACrB,CAAC;;AACD,2EAA2E;AACxE,6BAAA,GAAoC;IAC3C,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBACrB,QAAQ,EAAK,eAAA;gBACb,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA0DT;gBACD,MAAM,EAAE,CAAA;;;;;KAKP,CAAC;aACL,EAAC,EAAG;CACJ,CAAC;AACF;;GAEG;AADF,iCAAA,GAAA,MAAA,EAGA,CAAC;AADK,iCAAA,GAAyD;IAGhE,YAAY,EAFE,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;IAG1D,QAVE,EAQQ,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAG1B,CAFC;AAKF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;AACpC,CAAC","file":"slideshow.component.js","sourceRoot":"","sourcesContent":["import { Component, ViewChild, ElementRef, Input } from '@angular/core';\n\n// Import PhotoSwipe\n\nimport PhotoSwipe from 'photoswipe';\nimport PhotoSwipeUI_Default from 'photoswipe/dist/photoswipe-ui-default';\n\n// Image Interface\n\nimport { IImage } from '../../interfaces/image';\nexport class SlideShowComponent\n{\n     photoSwipe: ElementRef;\n\n     images: IImage[] = [];\nconstructor() { }\n/**\n * @param {?=} images\n * @return {?}\n */\nopenSlideshow(images?: IImage[])\n    {\n        // Build slideshow images array\n        images = images || this.images;\n\n        // define options (if needed)\n        const /** @type {?} */ options = {\n            // optionName: 'option value'\n            // for example:\n            index: 0 // start at first slide\n        };\n\n        // Initializes and opens PhotoSwipe\n        const /** @type {?} */ slideShow = new PhotoSwipe(this.photoSwipe.nativeElement, PhotoSwipeUI_Default, images, options);\n        slideShow.init();\n    }\n    // ========================================================================\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector   : 'app-slideshow',\n    template: `\n      <!-- Root element of PhotoSwipe. Must have class pswp. -->\n      <div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" #slideShow>\n\n          <!-- Background of PhotoSwipe. \n                      It's a separate element as animating opacity is faster than rgba(). -->\n          <div class=\"pswp__bg\"></div>\n\n          <!-- Slides wrapper with overflow:hidden. -->\n          <div class=\"pswp__scroll-wrap\">\n\n              <!-- Container that holds slides. \n                      PhotoSwipe keeps only 3 of them in the DOM to save memory.\n                      Don't modify these 3 pswp__item elements, data is added later on. -->\n              <div class=\"pswp__container\">\n                  <div class=\"pswp__item\"></div>\n                  <div class=\"pswp__item\"></div>\n                  <div class=\"pswp__item\"></div>\n              </div>\n\n              <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n              <div class=\"pswp__ui pswp__ui--hidden\">\n\n                  <div class=\"pswp__top-bar\">\n\n                      <!--  Controls are self-explanatory. Order can be changed. -->\n\n                      <div class=\"pswp__counter\"></div>\n\n                      <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n                      <button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n                      <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n                      <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n                      <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n                      <!-- element will get class pswp__preloader--active when preloader is running -->\n                      <div class=\"pswp__preloader\">\n                          <div class=\"pswp__preloader__icn\">\n                              <div class=\"pswp__preloader__cut\">\n                                  <div class=\"pswp__preloader__donut\"></div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n\n                  <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n                      <div class=\"pswp__share-tooltip\"></div>\n                  </div>\n\n                  <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\"></button>\n                  <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\"></button>\n\n                  <div class=\"pswp__caption\">\n                      <div class=\"pswp__caption__center\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    `,\n    styles: [`\n      .pswp__bg\n      {\n          background: rgba(0, 0, 0, 0.9);\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'photoSwipe': [{ type: ViewChild, args: ['slideShow', ] },],\n'images': [{ type: Input },],\n};\n}\n\nfunction SlideShowComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSlideShowComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlideShowComponent.ctorParameters;\n/** @type {?} */\nSlideShowComponent.propDecorators;\n/** @type {?} */\nSlideShowComponent.prototype.photoSwipe;\n/** @type {?} */\nSlideShowComponent.prototype.images;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}