{"version":3,"sources":["gallery.component.ts"],"names":[],"mappings":"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","file":"gallery.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\n// Gallery interface\n\nimport { IGalleryItem        } from '../../interfaces/gallery-item';\n\n// (Singleton) Notification service used to alert other components of changes & act upon it\n\nimport { NotificationService } from '../../services/notification/notification.service';\nexport class GalleryComponent implements OnInit\n{\n    // Set \"isLoadingGallerys\" to True if we're already loading videos (to avoid\n    // sending multiple requests in case user keeps scrolling)\n    isLoadingGallery = false;\n    error            = '';\n     galleryItems  : IGalleryItem[] = [];\n\n    // True => user is loading index page   |   False => user is viewing gallery item details page\n     isSideBar     = false;\n\n     galleryDescr  = '';\n\n    // Only valid if video is loading as a side bar, store the main video's ID\n    // Variable used to skip loading the same video both as main one and on the side bar!\n     mainGalleryId = '';\n\n    // Disable items auto-loading after 5 times\n     disableLoadMoreAfter = 5;\nprivate autoLoadCounter       = 0;\n\n     scrollMoreDiv: ElementRef;\n/**\n * @param {?} notif\n */\nconstructor(private notif: NotificationService)\n    { }\n/**\n * @return {?}\n */\nngOnInit()\n    {\n        // Infinite scrolling implemented in home page only\n        // (doesn't make sense to add it in sidebar...)\n        if (!this.isSideBar)\n        {\n            // AFAIA, we can't use conditional listening, ie. combine HostListener() & if(isSideBar),\n            // so we have to use the \"classic\" approach, ie. call addEventListener()\n\n            const /** @type {?} */ that = this;\n            document.addEventListener('scroll', () =>\n            {\n                that.userScrolling();\n            }, true);\n        }\n    }\n/**\n * @return {?}\n */\nuserScrolling()\n    {\n        // User is scrolling page, load more items if s/he reached bottom:\n        if (this.isInViewport(this.scrollMoreDiv.nativeElement))\n        {\n            // load more items\n            this.loadMoreItems();\n        }\n    }\n/**\n * @return {?}\n */\nloadMoreItems()\n    {\n        if (this.autoLoadCounter <= this.disableLoadMoreAfter)\n        {\n            console.log('loadMoreItems()');\n\n            this.autoLoadCounter++;\n            this.notif.loadMoreItems();\n        }\n    }\n/**\n * @param {?} el\n * @return {?}\n */\nisInViewport(el)\n    {\n        // (Helper function) Return true if element is in viesport (ie. visible!)\n\n        const /** @type {?} */ rect = el.getBoundingClientRect();\n\n        return (\n            rect.bottom >= 0 &&\n            rect.right  >= 0 &&\n            rect.top    <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.left   <= (window.innerWidth  || document.documentElement.clientWidth)\n        );\n    }\n    // =========================================================================\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector   : 'app-gallery',\n    template: `\n      <!-- Welcome Message -->\n      <header *ngIf=\"!isSideBar\">\n          <p>{{galleryDescr}}</p>\n      </header>\n\n      <section>\n          <!-- for loop to display (up to 10) gallery items -->\n          <app-gallery-item\n              *ngFor=\"let item of galleryItems\"\n                  [item]=\"item\"\n                  [isSideBar]=\"isSideBar\">\n          </app-gallery-item>\n\n          <!-- <hr /> -->\n          <div class=\"row text-center\" id=\"loading\" *ngIf=\"!isSideBar\">\n              <!-- <img src=\"assets/images/loading.gif\" title=\"Loading more awesome entries...\" /> &nbsp;&nbsp; -->\n\n              <button (click)=\"loadMoreItems()\" class=\"btn blue center\">\n                  Loading more awesome entries...\n              </button>\n          </div>\n\n          <div #scrollMore *ngIf=\"!isSideBar\">&nbsp;</div>\n      </section>\n\n      <br /><br />\n    `,\n    styles: [`\n      /* ========== Grid \"Container\" */\n      section\n      {\n          overflow-x: hidden;\n      }\n\n      /* ========== Fix a small position anomaly with large width */\n      @media screen and (min-width: 1000px)\n      {\n          section { padding-left: 10px; }\n      }\n\n      /* ========== Button */\n      .btn\n      {\n          border-radius: 0;    \n      }\n      .btn.blue\n      {\n          background: #207bca;\n          -webkit-box-shadow: 0 0 8px 1px hsla(208, 100%, 93%, 1);\n                  box-shadow: 0 0 8px 1px hsla(208, 100%, 93%, 1);\n          /* border: 1px solid hsla(208, 100%, 94%, 1); */\n          color: aliceblue;\n      }\n\n      /* ========== \"Loading more items...\" */\n      #loading\n      {\n          font-weight: bold;\n          margin-top: 15px;\n      }\n      #loading button\n      {\n          margin: 0 auto;\n          cursor: pointer;\n      }\n\n      /* ========== Indent Welcome/Greeting Header */\n      header\n      {\n          text-indent: 7px;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'galleryItems': [{ type: Input },],\n'isSideBar': [{ type: Input },],\n'galleryDescr': [{ type: Input },],\n'mainGalleryId': [{ type: Input },],\n'disableLoadMoreAfter': [{ type: Input },],\n'scrollMoreDiv': [{ type: ViewChild, args: ['scrollMore', ] },],\n};\n}\n\nfunction GalleryComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGalleryComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGalleryComponent.ctorParameters;\n/** @type {?} */\nGalleryComponent.propDecorators;\n/** @type {?} */\nGalleryComponent.prototype.isLoadingGallery;\n/** @type {?} */\nGalleryComponent.prototype.error;\n/** @type {?} */\nGalleryComponent.prototype.galleryItems;\n/** @type {?} */\nGalleryComponent.prototype.isSideBar;\n/** @type {?} */\nGalleryComponent.prototype.galleryDescr;\n/** @type {?} */\nGalleryComponent.prototype.mainGalleryId;\n/** @type {?} */\nGalleryComponent.prototype.disableLoadMoreAfter;\n/** @type {?} */\nGalleryComponent.prototype.autoLoadCounter;\n/** @type {?} */\nGalleryComponent.prototype.scrollMoreDiv;\n/** @type {?} */\nGalleryComponent.prototype.notif;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}