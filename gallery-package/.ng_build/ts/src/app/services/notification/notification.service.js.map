{"version":3,"sources":["notification.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAA,eAAA,CAAA;AAEpB,OAAO,EAAE,OAAA,EAAQ,MAAA,cAAA,CAAA;AACjB,MAEC;IAFD;QAKY,0BAAA,GAA2B,IAAI,OAAA,EAAe,CAAG;QACjD,6BAAA,GAA2B,IAAI,OAAA,EAAQ,CAAE;QACzC,0BAAA,GAA2B,IAAI,OAAA,EAAe,CAAG;QADzD,4BAA4B;QAC5B,qBAAgB,GAGM,IAAA,CAAK,qBAAC,CAAqB,YAAC,EAAY,CAAE;QAFhE,wBAAmB,GAGG,IAAA,CAAK,wBAAC,CAAwB,YAAC,EAAY,CAAE;QAFnE,qBAAgB,GAGM,IAAA,CAAK,qBAAC,CAAqB,YAAC,EAAY,CAAE;IAoBpE,CAAC;IAtBD;;;OAGG;IACH,aACK,CAAA,EAAA,IAA4B,IAAA,CAAK,qBAAC,CAAqB,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC,CAAA;IAAtE;;OAEG;IACH,aAFK,KAA4B,IAAA,CAAK,wBAAC,CAAwB,IAAC,EAAI,CAAE,CAAC,CAAA;IAGvE;;;OAGG;IACH,cALK,CAAA,EAAA,IAA4B,IAAA,CAAK,wBAAC,CAAwB,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC,CAAA;;AAClE,8BAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,UAAA,EAAW;CAMlB,CALC;AAMF;;GAEG;AANF,kCAAA,GAAA,MAAA,EAQA,CAAC;AAGF;IACA,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B;;;OAGG;IACH,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,CAAC;IACpD,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,wBAAwB,CAAC;IACvD,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,CAAC;IACpD,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC/C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAClD,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,gBAAgB,CAAC;AAC/C,CAAC","file":"notification.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject    } from 'rxjs/Subject';\nexport class NotificationService\n{\nprivate slideshowOpenedSource    = new Subject<string>();\nprivate moreItemsRequestedSource = new Subject();\nprivate favoriteToggledSource    = new Subject<string>();\n\n    // Observable string streams\n    slideShowOpened$    = this.slideshowOpenedSource.asObservable();\n    moreItemsRequested$ = this.moreItemsRequestedSource.asObservable();\n    favoriteChanged$    = this.favoriteToggledSource.asObservable();\n/**\n * @param {?} id\n * @return {?}\n */\nopenSlideShow(id: string)  { this.slideshowOpenedSource.next(id);    }\n/**\n * @return {?}\n */\nloadMoreItems()            { this.moreItemsRequestedSource.next();   }\n/**\n * @param {?} id\n * @return {?}\n */\ntoggleFavorite(id: string) { this.moreItemsRequestedSource.next(id); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.slideshowOpenedSource;\n/** @type {?} */\nNotificationService.prototype.moreItemsRequestedSource;\n/** @type {?} */\nNotificationService.prototype.favoriteToggledSource;\n/** @type {?} */\nNotificationService.prototype.slideShowOpened$;\n/** @type {?} */\nNotificationService.prototype.moreItemsRequested$;\n/** @type {?} */\nNotificationService.prototype.favoriteChanged$;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}